use plotters::prelude::*;
use csv::Reader;
use std::error::Error;

fn main() -> Result<(), Box<dyn Error>> {
    let root = BitMapBackend::new("output/nps_vs_salary.png", (640, 480)).into_drawing_area();
    root.fill(&WHITE)?;

    let mut chart = ChartBuilder::on(&root)
        .caption("NPS vs. Salary", ("sans-serif", 50).into_font())
        .margin(5)
        .x_label_area_size(30)
        .y_label_area_size(30)
        .build_cartesian_2d(0..10, 0u32..150000u32)?;

    chart.configure_mesh().draw()?;

    let mut reader = Reader::from_path("/Users/eduardo/PP/modulegraphs/src/modified_data.csv")?;
    let headers = reader.headers()?;
    let nps_index = headers.iter().position(|h| h == "NPS").ok_or("NPS column not found")?;
    let salary_index = headers.iter().position(|h| h == "Salary").ok_or("Salary column not found")?;

    for result in reader.records() {
        let record = result?;
        let nps = record.get(nps_index).ok_or("NPS value missing")?.parse::<i32>()?;
        let salary = record.get(salary_index).ok_or("Salary value missing")?.parse::<u32>()?;

        chart.draw_series(PointSeries::of_element(
            vec![(nps, salary)],
            5, &RED, &|c, s, st| {
                EmptyElement::at(c) + Circle::new((0, 0), s, st.filled())
            },
        ))?;
    }

    Ok(())
}
